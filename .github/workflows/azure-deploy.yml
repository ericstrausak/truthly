name: Build and deploy a container to an Azure Web App

env:
  AZURE_WEBAPP_NAME: straueri-Truthly

on:
  push:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      # Frontend-Build
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Build Frontend
        run: |
          cd frontend
          npm install
          npm run build
          # Die Dateien werden bereits nach src/main/resources/static kopiert (siehe Ausgabe oben)
          # kein cp -r dist/* oder cp -r build/* nÃ¶tig
      
      # Backend-Build
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      
      - name: Build with Maven
        run: |
          chmod +x ./mvnw
          ./mvnw clean package -DskipTests
      
      # Docker-Build und Push
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Log in to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      
      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
      
      # Einfaches Dockerfile erstellen
      - name: Create simple Dockerfile
        run: |
          echo "FROM openjdk:21-jdk-slim" > Dockerfile.simple
          echo "WORKDIR /app" >> Dockerfile.simple
          echo "COPY target/Truthly-0.0.1-SNAPSHOT.jar app.jar" >> Dockerfile.simple
          echo "EXPOSE 8080" >> Dockerfile.simple
          echo 'CMD ["java", "-jar", "app.jar"]' >> Dockerfile.simple
      
      - name: Build and push container image to registry
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.REPO }}:${{ github.sha }}
          file: ./Dockerfile.simple
          platforms: linux/amd64
  
  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: 'ghcr.io/${{ env.REPO }}:${{ github.sha }}'